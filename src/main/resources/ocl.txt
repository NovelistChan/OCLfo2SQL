context T inv crossAdd: T.allInstances()->forAll(t| TT.allInstances()->forAll(tt| (t.XH + tt.XH) > 0))
context SnapShotTest inv add: ((self.timeStamp + self.expired) - self.time) > 0
context SnapShotTest inv add: ((self.timeStamp + self.expired) - self.time) > self.timeStamp
context SnapShotTest inv add: ((self.timeStamp + self.expired) - self.time) > self.predId.timeStamp
context SnapShotTest inv aggCompare: self.timeStamp->sum() > self.timeStamp->max()
context SnapShotTest inv aggCompare: self.timeStamp->sum() > (self.timeStamp + 1)
context SnapShotTest inv aggCompare: self.timeStamp->sum() > (3 + 1)
context SnapShotTest inv aggCompare: self.timeStamp->sum() > self.predId.timeStamp
context SnapShotTest inv aggCompare: self.timeStamp->sum() > 6
context SnapShotTest inv aggCompare: self.timeStamp->sum() > self.timeStamp
context T inv selection: T.allInstances()->select(t| t.XH > 0)->isEmpty()
context SnapShotTest inv timeLimit: self.timeStamp < self.predId.expired
context SnapShotTest inv timeLimit: self.timeStamp < self.expired
context SnapShotTest inv passIdNotN: self.passId <> 'null'
context T inv SBM: THP.allInstances()->forAll(thp| thp.SBM <> self.SBM)
context SnapShotTest inv cross: self.predId.succId.predId.succId.passId <> 'null'
context SnapShotTest inv two: self.timeStamp > 0 and self.timeStamp < 99999
context SnapShotTest inv dou: self.timeStamp > 0 or self.timeStamp <> 1
context SnapShotTest inv par: self.timeStamp > 0 implies self.predId.expired > 0
context SnapShotTest inv uni: self.timeStamp > 0 xor self.predId.succId.timeStamp <= 0
context T inv SBM: THP.allInstances()->forAll(thp| TT.allInstances()->forAll(tt| tt.SBM <> thp.SBM and self.SBM <> tt.SBM))
context SnapShotTest inv oneNull: self.predId <> 'null' or self.succId <> 'null'
context SnapShotTest inv oneNull: self.predId = 'null' implies self.succId <> 'null'
context Taxi inv taxiSpd: Taxi.allInstances()->forAll(t| t.taxi_id <> self.taxi_id implies t.taxi_id <> 'null')