// Generated from /Users/novelistchan/Documents/OCLfo2SQL/src/main/java/ANTLR/RA2SQL/RA2SQLLexer.g4 by ANTLR 4.10.1
package ANTLR.RA2SQL;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class RA2SQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SPACE=1, PROJECTION=2, SELECTION=3, UNION=4, DIFFER=5, INTERSECTION=6, 
		JOIN=7, UNIVERSALSET=8, COMMA=9, EQ=10, GT=11, LT=12, NE=13, GE=14, LE=15, 
		AND=16, OR=17, XOR=18, IMPLY=19, NOT=20, AR=21, ADD=22, MIN=23, MUL=24, 
		DIV=25, MOD=26, SUM=27, AVG=28, Min=29, Max=30, COUNT=31, AGG=32, GROUP=33, 
		BY=34, DOT=35, LB=36, RB=37, SEP=38, QUOTE=39, ID=40, STRING=41, INT=42;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"SPACE", "PROJECTION", "SELECTION", "UNION", "DIFFER", "INTERSECTION", 
			"JOIN", "UNIVERSALSET", "COMMA", "EQ", "GT", "LT", "NE", "GE", "LE", 
			"AND", "OR", "XOR", "IMPLY", "NOT", "AR", "ADD", "MIN", "MUL", "DIV", 
			"MOD", "SUM", "AVG", "Min", "Max", "COUNT", "AGG", "GROUP", "BY", "DOT", 
			"LB", "RB", "SEP", "QUOTE", "ID", "STRING", "INT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'pi'", "'sigma'", "'union'", "'\\'", "'intersect'", "'join'", 
			"'U'", "','", "'='", "'>'", "'<'", "'<>'", "'>='", "'<='", "'and'", "'or'", 
			"'xor'", "'implies'", "'not'", "'->'", "'+'", "'-'", "'*'", "'/'", "'%'", 
			"'SUM'", "'AVG'", "'MIN'", "'MAX'", "'COUNT'", "'aggregate'", "'group'", 
			"'by'", "'.'", "'('", "')'", "'|'", "'''"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "SPACE", "PROJECTION", "SELECTION", "UNION", "DIFFER", "INTERSECTION", 
			"JOIN", "UNIVERSALSET", "COMMA", "EQ", "GT", "LT", "NE", "GE", "LE", 
			"AND", "OR", "XOR", "IMPLY", "NOT", "AR", "ADD", "MIN", "MUL", "DIV", 
			"MOD", "SUM", "AVG", "Min", "Max", "COUNT", "AGG", "GROUP", "BY", "DOT", 
			"LB", "RB", "SEP", "QUOTE", "ID", "STRING", "INT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RA2SQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "RA2SQLLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000*\u00f7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0004\u0000"+
		"W\b\u0000\u000b\u0000\f\u0000X\u0001\u0000\u0001\u0000\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n"+
		"\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017"+
		"\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f"+
		"\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f"+
		"\u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001!\u0001!\u0001!\u0001"+
		"\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001"+
		"\'\u0001\'\u0005\'\u00e9\b\'\n\'\f\'\u00ec\t\'\u0001(\u0004(\u00ef\b("+
		"\u000b(\f(\u00f0\u0001)\u0004)\u00f4\b)\u000b)\f)\u00f5\u0000\u0000*\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d"+
		"\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/"+
		"\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K"+
		"&M\'O(Q)S*\u0001\u0000\u0004\u0003\u0000\t\n\r\r  \u0002\u0000AZaz\u0004"+
		"\u000009AZ__az\u0001\u000009\u00fa\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000"+
		"\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000"+
		"I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001"+
		"\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000"+
		"\u0000\u0000S\u0001\u0000\u0000\u0000\u0001V\u0001\u0000\u0000\u0000\u0003"+
		"\\\u0001\u0000\u0000\u0000\u0005_\u0001\u0000\u0000\u0000\u0007e\u0001"+
		"\u0000\u0000\u0000\tk\u0001\u0000\u0000\u0000\u000bm\u0001\u0000\u0000"+
		"\u0000\rw\u0001\u0000\u0000\u0000\u000f|\u0001\u0000\u0000\u0000\u0011"+
		"~\u0001\u0000\u0000\u0000\u0013\u0080\u0001\u0000\u0000\u0000\u0015\u0082"+
		"\u0001\u0000\u0000\u0000\u0017\u0084\u0001\u0000\u0000\u0000\u0019\u0086"+
		"\u0001\u0000\u0000\u0000\u001b\u0089\u0001\u0000\u0000\u0000\u001d\u008c"+
		"\u0001\u0000\u0000\u0000\u001f\u008f\u0001\u0000\u0000\u0000!\u0093\u0001"+
		"\u0000\u0000\u0000#\u0096\u0001\u0000\u0000\u0000%\u009a\u0001\u0000\u0000"+
		"\u0000\'\u00a2\u0001\u0000\u0000\u0000)\u00a6\u0001\u0000\u0000\u0000"+
		"+\u00a9\u0001\u0000\u0000\u0000-\u00ab\u0001\u0000\u0000\u0000/\u00ad"+
		"\u0001\u0000\u0000\u00001\u00af\u0001\u0000\u0000\u00003\u00b1\u0001\u0000"+
		"\u0000\u00005\u00b3\u0001\u0000\u0000\u00007\u00b7\u0001\u0000\u0000\u0000"+
		"9\u00bb\u0001\u0000\u0000\u0000;\u00bf\u0001\u0000\u0000\u0000=\u00c3"+
		"\u0001\u0000\u0000\u0000?\u00c9\u0001\u0000\u0000\u0000A\u00d3\u0001\u0000"+
		"\u0000\u0000C\u00d9\u0001\u0000\u0000\u0000E\u00dc\u0001\u0000\u0000\u0000"+
		"G\u00de\u0001\u0000\u0000\u0000I\u00e0\u0001\u0000\u0000\u0000K\u00e2"+
		"\u0001\u0000\u0000\u0000M\u00e4\u0001\u0000\u0000\u0000O\u00e6\u0001\u0000"+
		"\u0000\u0000Q\u00ee\u0001\u0000\u0000\u0000S\u00f3\u0001\u0000\u0000\u0000"+
		"UW\u0007\u0000\u0000\u0000VU\u0001\u0000\u0000\u0000WX\u0001\u0000\u0000"+
		"\u0000XV\u0001\u0000\u0000\u0000XY\u0001\u0000\u0000\u0000YZ\u0001\u0000"+
		"\u0000\u0000Z[\u0006\u0000\u0000\u0000[\u0002\u0001\u0000\u0000\u0000"+
		"\\]\u0005p\u0000\u0000]^\u0005i\u0000\u0000^\u0004\u0001\u0000\u0000\u0000"+
		"_`\u0005s\u0000\u0000`a\u0005i\u0000\u0000ab\u0005g\u0000\u0000bc\u0005"+
		"m\u0000\u0000cd\u0005a\u0000\u0000d\u0006\u0001\u0000\u0000\u0000ef\u0005"+
		"u\u0000\u0000fg\u0005n\u0000\u0000gh\u0005i\u0000\u0000hi\u0005o\u0000"+
		"\u0000ij\u0005n\u0000\u0000j\b\u0001\u0000\u0000\u0000kl\u0005\\\u0000"+
		"\u0000l\n\u0001\u0000\u0000\u0000mn\u0005i\u0000\u0000no\u0005n\u0000"+
		"\u0000op\u0005t\u0000\u0000pq\u0005e\u0000\u0000qr\u0005r\u0000\u0000"+
		"rs\u0005s\u0000\u0000st\u0005e\u0000\u0000tu\u0005c\u0000\u0000uv\u0005"+
		"t\u0000\u0000v\f\u0001\u0000\u0000\u0000wx\u0005j\u0000\u0000xy\u0005"+
		"o\u0000\u0000yz\u0005i\u0000\u0000z{\u0005n\u0000\u0000{\u000e\u0001\u0000"+
		"\u0000\u0000|}\u0005U\u0000\u0000}\u0010\u0001\u0000\u0000\u0000~\u007f"+
		"\u0005,\u0000\u0000\u007f\u0012\u0001\u0000\u0000\u0000\u0080\u0081\u0005"+
		"=\u0000\u0000\u0081\u0014\u0001\u0000\u0000\u0000\u0082\u0083\u0005>\u0000"+
		"\u0000\u0083\u0016\u0001\u0000\u0000\u0000\u0084\u0085\u0005<\u0000\u0000"+
		"\u0085\u0018\u0001\u0000\u0000\u0000\u0086\u0087\u0005<\u0000\u0000\u0087"+
		"\u0088\u0005>\u0000\u0000\u0088\u001a\u0001\u0000\u0000\u0000\u0089\u008a"+
		"\u0005>\u0000\u0000\u008a\u008b\u0005=\u0000\u0000\u008b\u001c\u0001\u0000"+
		"\u0000\u0000\u008c\u008d\u0005<\u0000\u0000\u008d\u008e\u0005=\u0000\u0000"+
		"\u008e\u001e\u0001\u0000\u0000\u0000\u008f\u0090\u0005a\u0000\u0000\u0090"+
		"\u0091\u0005n\u0000\u0000\u0091\u0092\u0005d\u0000\u0000\u0092 \u0001"+
		"\u0000\u0000\u0000\u0093\u0094\u0005o\u0000\u0000\u0094\u0095\u0005r\u0000"+
		"\u0000\u0095\"\u0001\u0000\u0000\u0000\u0096\u0097\u0005x\u0000\u0000"+
		"\u0097\u0098\u0005o\u0000\u0000\u0098\u0099\u0005r\u0000\u0000\u0099$"+
		"\u0001\u0000\u0000\u0000\u009a\u009b\u0005i\u0000\u0000\u009b\u009c\u0005"+
		"m\u0000\u0000\u009c\u009d\u0005p\u0000\u0000\u009d\u009e\u0005l\u0000"+
		"\u0000\u009e\u009f\u0005i\u0000\u0000\u009f\u00a0\u0005e\u0000\u0000\u00a0"+
		"\u00a1\u0005s\u0000\u0000\u00a1&\u0001\u0000\u0000\u0000\u00a2\u00a3\u0005"+
		"n\u0000\u0000\u00a3\u00a4\u0005o\u0000\u0000\u00a4\u00a5\u0005t\u0000"+
		"\u0000\u00a5(\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005-\u0000\u0000\u00a7"+
		"\u00a8\u0005>\u0000\u0000\u00a8*\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005"+
		"+\u0000\u0000\u00aa,\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005-\u0000"+
		"\u0000\u00ac.\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005*\u0000\u0000\u00ae"+
		"0\u0001\u0000\u0000\u0000\u00af\u00b0\u0005/\u0000\u0000\u00b02\u0001"+
		"\u0000\u0000\u0000\u00b1\u00b2\u0005%\u0000\u0000\u00b24\u0001\u0000\u0000"+
		"\u0000\u00b3\u00b4\u0005S\u0000\u0000\u00b4\u00b5\u0005U\u0000\u0000\u00b5"+
		"\u00b6\u0005M\u0000\u0000\u00b66\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005"+
		"A\u0000\u0000\u00b8\u00b9\u0005V\u0000\u0000\u00b9\u00ba\u0005G\u0000"+
		"\u0000\u00ba8\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005M\u0000\u0000\u00bc"+
		"\u00bd\u0005I\u0000\u0000\u00bd\u00be\u0005N\u0000\u0000\u00be:\u0001"+
		"\u0000\u0000\u0000\u00bf\u00c0\u0005M\u0000\u0000\u00c0\u00c1\u0005A\u0000"+
		"\u0000\u00c1\u00c2\u0005X\u0000\u0000\u00c2<\u0001\u0000\u0000\u0000\u00c3"+
		"\u00c4\u0005C\u0000\u0000\u00c4\u00c5\u0005O\u0000\u0000\u00c5\u00c6\u0005"+
		"U\u0000\u0000\u00c6\u00c7\u0005N\u0000\u0000\u00c7\u00c8\u0005T\u0000"+
		"\u0000\u00c8>\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005a\u0000\u0000\u00ca"+
		"\u00cb\u0005g\u0000\u0000\u00cb\u00cc\u0005g\u0000\u0000\u00cc\u00cd\u0005"+
		"r\u0000\u0000\u00cd\u00ce\u0005e\u0000\u0000\u00ce\u00cf\u0005g\u0000"+
		"\u0000\u00cf\u00d0\u0005a\u0000\u0000\u00d0\u00d1\u0005t\u0000\u0000\u00d1"+
		"\u00d2\u0005e\u0000\u0000\u00d2@\u0001\u0000\u0000\u0000\u00d3\u00d4\u0005"+
		"g\u0000\u0000\u00d4\u00d5\u0005r\u0000\u0000\u00d5\u00d6\u0005o\u0000"+
		"\u0000\u00d6\u00d7\u0005u\u0000\u0000\u00d7\u00d8\u0005p\u0000\u0000\u00d8"+
		"B\u0001\u0000\u0000\u0000\u00d9\u00da\u0005b\u0000\u0000\u00da\u00db\u0005"+
		"y\u0000\u0000\u00dbD\u0001\u0000\u0000\u0000\u00dc\u00dd\u0005.\u0000"+
		"\u0000\u00ddF\u0001\u0000\u0000\u0000\u00de\u00df\u0005(\u0000\u0000\u00df"+
		"H\u0001\u0000\u0000\u0000\u00e0\u00e1\u0005)\u0000\u0000\u00e1J\u0001"+
		"\u0000\u0000\u0000\u00e2\u00e3\u0005|\u0000\u0000\u00e3L\u0001\u0000\u0000"+
		"\u0000\u00e4\u00e5\u0005\'\u0000\u0000\u00e5N\u0001\u0000\u0000\u0000"+
		"\u00e6\u00ea\u0007\u0001\u0000\u0000\u00e7\u00e9\u0007\u0002\u0000\u0000"+
		"\u00e8\u00e7\u0001\u0000\u0000\u0000\u00e9\u00ec\u0001\u0000\u0000\u0000"+
		"\u00ea\u00e8\u0001\u0000\u0000\u0000\u00ea\u00eb\u0001\u0000\u0000\u0000"+
		"\u00ebP\u0001\u0000\u0000\u0000\u00ec\u00ea\u0001\u0000\u0000\u0000\u00ed"+
		"\u00ef\u0007\u0001\u0000\u0000\u00ee\u00ed\u0001\u0000\u0000\u0000\u00ef"+
		"\u00f0\u0001\u0000\u0000\u0000\u00f0\u00ee\u0001\u0000\u0000\u0000\u00f0"+
		"\u00f1\u0001\u0000\u0000\u0000\u00f1R\u0001\u0000\u0000\u0000\u00f2\u00f4"+
		"\u0007\u0003\u0000\u0000\u00f3\u00f2\u0001\u0000\u0000\u0000\u00f4\u00f5"+
		"\u0001\u0000\u0000\u0000\u00f5\u00f3\u0001\u0000\u0000\u0000\u00f5\u00f6"+
		"\u0001\u0000\u0000\u0000\u00f6T\u0001\u0000\u0000\u0000\u0005\u0000X\u00ea"+
		"\u00f0\u00f5\u0001\u0000\u0001\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}